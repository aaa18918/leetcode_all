O(n) time, O(n) space
class Solution(object):
    def findRepeatedDnaSequences(self, s):
        """
        :type s: str
        :rtype: List[str]
        """
        
        if len(s) < 10:
            return []
        
        c_to_int = {'A':0, 'C':1, 'G':2, 'T':3}
        cur = 0
        words = set()
        added = set()
        res = []
        for idx in range(10):
            cur = (cur<<2)+c_to_int[s[idx]]
        
        words.add(cur)
        
        for idx in range(10, len(s)):
            cur &= 0b111111111111111111
            cur = (cur<<2)+c_to_int[s[idx]]
            if cur in words and cur not in added:
                res.append(s[idx-9:idx+1])
                added.add(cur)
            
            words.add(cur)
        
        return res
