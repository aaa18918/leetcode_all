O(n) time, O(1) space
class Solution(object):
    def nextPermutation(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        def reverse(left, right):
            while left < right:
                nums[left], nums[right] = nums[right], nums[left]
                left, right = left+1, right-1
        
        idx = len(nums)-2
        while idx >= 0:
            if nums[idx] < nums[idx+1]:
                i = idx+1
                while i < len(nums) and nums[i] > nums[idx]:
                    i += 1
                
                nums[idx], nums[i-1] = nums[i-1], nums[idx]
                reverse(idx+1, len(nums)-1)
                return
                
            idx -= 1
        
        reverse(0, len(nums)-1)
