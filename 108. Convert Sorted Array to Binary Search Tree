O(n) time, O(???) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def sortedArrayToBST(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        
        def myHelp(left, right):
            if left >= right:
                return TreeNode(nums[left]) if left == right else None
            
            mid = (left+right)/2
            node = TreeNode(nums[mid])
            node.left, node.right = myHelp(left, mid-1), myHelp(mid+1, right)
            return node
        
        return myHelp(0, len(nums)-1)
