class Solution(object):
    def thirdMax(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        nums = list(set(nums))
        if len(nums) < 3: return max(nums)
        my_heap = nums[:3]
        heapq.heapify(my_heap)
        for num in nums[3:]:
            if num > my_heap[0]:
                heapq.heappushpop(my_heap, num)
        return my_heap[0]


class Solution(object):
    def thirdMax(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        a, b, c = float('-inf'), float('-inf'), float('-inf')
        for num in nums:
            if num > a:
                a, b, c = num, a, b
            elif a > num > b:
                b, c = num, b
            elif b > num > c:
                c = num
        
        return c if a > b > c > float('-inf') else a
