O(5n) time, O(n) space
class Solution(object):
    def reverseWords(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        list_s = list(s.strip())
        
        def reverseList(l, r):
            while l < r:
                list_s[l], list_s[r] = list_s[r], list_s[l]
                l, r = l+1, r-1
        
        size = len(list_s)
        reverseList(0, size-1)
        
        left = 0
        for idx in range(size):
            if idx == 0 or list_s[idx] != ' ' or list_s[idx-1] != ' ':
                list_s[left] = list_s[idx]
                left += 1
        
        size = left
        left = 0
        for idx in range(size+1):
            if idx == size or list_s[idx] == ' ':
                reverseList(left, idx-1)
                left = idx+1
        
        return ''.join(list_s[:size])


O(3n) time, O(n) space
class Solution(object):
    def reverseWords(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        return ' '.join(s.split()[::-1])
