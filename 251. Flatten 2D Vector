class Vector2D(object):

    def __init__(self, vec2d):
        """
        Initialize your data structure here.
        :type vec2d: List[List[int]]
        """
        
        self.vec2d = sum(vec2d, [])
        self.l = len(self.vec2d)
        self.i = 0

    def next(self):
        """
        :rtype: int
        """

        val = self.vec2d[self.i]
        self.i += 1
        return val

    def hasNext(self):
        """
        :rtype: bool
        """
        
        return True if self.i < self.l else False

# Your Vector2D object will be instantiated and called as such:
# i, v = Vector2D(vec2d), []
# while i.hasNext(): v.append(i.next())


class Vector2D(object):

    def __init__(self, vec2d):
        """
        Initialize your data structure here.
        :type vec2d: List[List[int]]
        """
        
        self.vec2d = vec2d
        self.m = len(self.vec2d)
        self.n = len(self.vec2d[self.m-1]) if self.m > 0 else 0
        self.i, self.j = 0, -1

    def next(self):
        """
        :rtype: int
        """
        
        return self.vec2d[self.i][self.j]

    def hasNext(self):
        """
        :rtype: bool
        """
        
        if self.m == 0: return False
        
        self.j += 1
        if self.j >= len(self.vec2d[self.i]):
            self.i, self.j = self.i+1, 0
        
        while self.i < self.m and not self.vec2d[self.i]:
            self.i += 1
            self.j = 0
        
        if self.i >= self.m: return False
        return True
        
        

# Your Vector2D object will be instantiated and called as such:
# i, v = Vector2D(vec2d), []
# while i.hasNext(): v.append(i.next())


class Vector2D(object):

    def __init__(self, vec2d):
        """
        Initialize your data structure here.
        :type vec2d: List[List[int]]
        """
        
        self.vec2d = vec2d
        self.i = 0
        self.j = -1
        self.m = len(self.vec2d)

    def next(self):
        """
        :rtype: int
        """
        
        return self.vec2d[self.i][self.j]
        
    def hasNext(self):
        """
        :rtype: bool
        """
        
        if self.m == 0: return False
        
        self.j += 1
        while self.i < self.m and self.j == len(self.vec2d[self.i]):
            self.i += 1
            self.j = 0
        
        if self.i == self.m:
            return False
        
        return True

# Your Vector2D object will be instantiated and called as such:
# i, v = Vector2D(vec2d), []
# while i.hasNext(): v.append(i.next())
