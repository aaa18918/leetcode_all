Depends on the condition for convergence, approximately O(lgn) time, O(1) space
class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        res = 1
        delta_res = (res*res-x)*1.0/(2*res)
        while abs(delta_res) > 0.5:
            res -= delta_res
            delta_res = (res*res-x)*1.0/(2*res)
        
        res = int(res)
        for num in (res+1, res, res-1):
            if num**2 <= x:
                return num


O(lgn) time, O(1) space
class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        left, right = 1, x+1
        while left < right:
            mid = (left+right)/2
            if mid <= x/mid:
                left = mid+1
            else:
                right = mid
        
        return left-1 if x > 0 else 0
