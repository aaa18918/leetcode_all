O(n^2) time, O(n) space
class Solution(object):
    def getPermutation(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: str
        """
        
        res = ''
        
        nums = [i for i in range(1, n+1)]
        d = reduce(lambda x, y: x*y, [i for i in range(1, n)]) if n > 1 else 1
        k -= 1
        
        for i in range(n-1, 0, -1):
            idx = k/d
            res += str(nums[idx])
            nums = nums[:idx]+nums[idx+1:]
            k %= d
            d /= i
        
        return res if not nums else res+str(nums[0])
