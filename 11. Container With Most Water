O(n) time, O(1) space
class Solution(object):
    def maxArea(self, height):
        """
        :type height: List[int]
        :rtype: int
        """
        
        res, left, right = 0, 0, len(height)-1
        while left < right:
            res = max(res, min(height[left], height[right])*(right-left))
            if height[left] < height[right]:
                pre_height = height[left]
                while left < right and height[left] <= pre_height:
                    left += 1
            else:
                pre_height = height[right]
                while left < right and height[right] <= pre_height:
                    right -= 1
        
        return res
