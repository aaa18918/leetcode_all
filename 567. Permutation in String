O(n) time, O(26) space
class Solution(object):
    def checkInclusion(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        
        counter = collections.Counter(s1)
        size1, size2 = len(s1), len(s2)
        
        c = copy.deepcopy(counter)
        count = size1
        left = 0
        for idx in range(size2):
            if s2[idx] not in c:
                c = copy.deepcopy(counter)
                count = size1
                left = idx+1
            elif c[s2[idx]] == 0:
                while s2[left] != s2[idx]:
                    c[s2[left]] += 1
                    count += 1
                    left += 1
                left += 1
            else:
                c[s2[idx]] -= 1
                count -= 1
                if count == 0:
                    return True
        return False
