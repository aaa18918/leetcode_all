O(n) time, O(1) space
class Solution(object):
    def lengthOfLongestSubstringTwoDistinct(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        counter = collections.defaultdict(int)
        left, res = 0, 0
        for idx in range(len(s)):
            counter[s[idx]] += 1
            if len(counter) > 2:
                res = max(res, idx-left)
                
                while len(counter) > 2:
                    counter[s[left]] -= 1
                    if counter[s[left]] == 0:
                        del counter[s[left]]
                    left += 1
        return max(res, len(s)-left)
