O(mn) time, O(k) space
class Solution(object):
    def exist(self, board, word):
        """
        :type board: List[List[str]]
        :type word: str
        :rtype: bool
        """
        
        if not word:
            return True
        
        diff = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        visited = set()
        
        def myDFS(idx, i, j):
            visited.add((i, j))
            
            for d in diff:
                if 0 <= i+d[0] < len(board) and 0 <= j+d[1] < len(board[0]) and board[i+d[0]][j+d[1]] == word[idx] and (i+d[0], j+d[1]) not in visited:
                    if len(word) == idx+1 or myDFS(idx+1, i+d[0], j+d[1]):
                        return True
            
            visited.remove((i, j))
            return False
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                if word[0] == board[i][j]:
                    if len(word) == 1 or myDFS(1, i, j):
                        return True
        
        return False
