O(1) time, O(1) space
class Solution(object):
    def isPowerOfThree(self, n):
        """
        :type n: int
        :rtype: bool
        """
        
        return n > 0 and pow(3, 20)%n == 0


O(1) time, O(1) space
class Solution(object):
    def isPowerOfThree(self, n):
        """
        :type n: int
        :rtype: bool
        """
        
        return n > 0 and (math.log10(n) / math.log10(3)) % 1 == 0


O(1) time, O(1) space
class Solution(object):
    def isPowerOfThree(self, n):
        """
        :type n: int
        :rtype: bool
        """
        
        return n > 0 and n == 3**round(math.log(n, 3))
