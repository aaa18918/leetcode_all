O(n) time, O(1) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseBetween(self, head, m, n):
        """
        :type head: ListNode
        :type m: int
        :type n: int
        :rtype: ListNode
        """
        
        if m == n: return head
        
        dummy_head = ListNode(0)
        dummy_head.next = head
        prev = dummy_head
        for idx in range(m-1):
            prev = prev.next
        
        p, q = prev.next, prev.next.next
        temp = q.next
        for idx in range(n-m):
            temp = q.next
            q.next = p
            p, q = q, temp
        
        prev.next.next = temp
        prev.next = p
        return dummy_head.next
