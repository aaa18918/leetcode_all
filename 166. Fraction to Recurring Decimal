Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.

If the fractional part is repeating, enclose the repeating part in parentheses.

Example 1:

Input: numerator = 1, denominator = 2
Output: "0.5"
Example 2:

Input: numerator = 2, denominator = 1
Output: "2"
Example 3:

Input: numerator = 2, denominator = 3
Output: "0.(6)"


O(denominator) time, O(denominator) space
class Solution(object):
    def fractionToDecimal(self, numerator, denominator):
        """
        :type numerator: int
        :type denominator: int
        :rtype: str
        """
        
        if not numerator or not denominator:
            return '0'
        
        res = '-' if numerator*denominator < 0 else ''
        numerator, denominator = abs(numerator), abs(denominator)
        res += str(numerator/denominator)
        res += '.'
        remainder = numerator%denominator
        
        hash_table = {}
        idx = len(res)
        while remainder > 0 and remainder not in hash_table:
            hash_table[remainder] = idx
            remainder = remainder*10
            res += str(remainder/denominator)
            remainder %= denominator
            idx += 1
        
        if remainder > 0:
            return res[:hash_table[remainder]]+'('+res[hash_table[remainder]:]+')'
        
        return res if res[-1] != '.' else res[:-1]
