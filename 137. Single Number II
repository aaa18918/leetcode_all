https://leetcode.com/problems/single-number-ii/

class Solution(object):
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        ones, twos = 0, 0
        
        for number in nums:
            ones = ones ^ number & ~twos
            twos = twos ^ number & ~ones
        
        return ones

class Solution(object):
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        appear_times_record = [0 for _ in range(32)]
        
        for num in nums:
            mask = 1
            for index in range(32):
                if num&mask:
                    appear_times_record[index] += 1
                mask <<= 1
        
        result = 0
        for appear_time in appear_times_record[::-1]:
            result <<= 1
            if appear_time%3:
                result += 1
        
        return result if result < 2**31 else result-2**32

class Solution(object):
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        two, one = 0, 0
        for num in nums:
            two |= num & one
            one ^= num
            one, two = one & (~(one&two)), two & (~(one&two))
        
        return one
