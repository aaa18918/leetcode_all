o(n) time, o(1) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        
        p1, p2, cur_sum = l1, l2, 0
        dummy_head = ListNode(0)
        p = dummy_head
        
        while p1 or p2:
            if p2: cur_sum += p2.val
            
            if p1:
                cur_sum += p1.val
                p1.val = cur_sum%10
                p.next = p1
            else:
                p2.val = cur_sum%10
                p.next = p2
            
            cur_sum /= 10
            p = p.next
            
            if p1: p1 = p1.next
            if p2: p2 = p2.next
        
        if cur_sum:
            p.next = ListNode(cur_sum)
            p = p.next
        
        p.next = None
        return dummy_head.next
