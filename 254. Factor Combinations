class Solution(object):
    def getFactors(self, n):
        """
        :type n: int
        :rtype: List[List[int]]
        """
        
        if n < 2:
            return []
        
        res = []
        
        def myDFS(start, n, c):
            if n == 1:
                if len(c) > 1:
                    res.append(c)
                
                return
            
            for i in range(start, n+1):
                if n%i == 0:
                    myDFS(i, n/i, c+[i])
        
        myDFS(2, n, [])
        return res


Java版本能过，我的Python内存操蛋了，不知道为什么。


class Solution(object):
    def getFactors(self, n):
        """
        :type n: int
        :rtype: List[List[int]]
        """
        
        if n <= 1:
            return []
        
        dp = [[[i]] for i in range(n)]
        dp.append([])
        
        for i in range(2, n/2+1):
            for j in range(2, n/i+1):
                for p in dp[i]:
                    if j >= p[-1]:
                        dp[i*j].append(p+[j])
        
        return dp[n]


内存还是爆炸啦。


需要看dis解法。
