Given a sorted integer array nums, where the range of elements are in the inclusive range [lower, upper], return its missing ranges.

Example:

Input: nums = [0, 1, 3, 50, 75], lower = 0 and upper = 99,
Output: ["2", "4->49", "51->74", "76->99"]


O(n) time, O(1) space
class Solution(object):
    def findMissingRanges(self, nums, lower, upper):
        """
        :type nums: List[int]
        :type lower: int
        :type upper: int
        :rtype: List[str]
        """
        
        nums.append(upper+1)
        left = lower-1
        res = []
        for num in nums:
            if num == left+2:
                res.append(str(left+1))
            elif num > left+2:
                res.append('{}->{}'.format(left+1, num-1))
            
            left = num
        
        nums.pop()
        
        return res
