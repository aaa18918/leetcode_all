O(n) time, O(???) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        
        def myHelp(node):
            if not node:
                return True, 0
            
            left, left_depth = myHelp(node.left)
            right, right_depth = myHelp(node.right)
            
            return left and right and abs(left_depth-right_depth) <= 1, max(left_depth, right_depth)+1
        
        return myHelp(root)[0]
