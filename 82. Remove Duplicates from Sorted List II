O(n) time, O(1) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteDuplicates(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        prev, dummy_head = 0, ListNode(0)
        p, q = head, dummy_head
        while p:
            if p is head:
                if p.next and p.val == p.next.val:
                    pass
                else:
                    q.next = p
                    q = q.next
            else:
                if p.next and p.val == p.next.val or p.val == prev:
                    pass
                else:
                    q.next = p
                    q = q.next
                
            prev, p = p.val, p.next
        
        q.next = None
        return dummy_head.next
