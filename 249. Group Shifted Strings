class Solution(object):
    def groupStrings(self, strings):
        """
        :type strings: List[str]
        :rtype: List[List[str]]
        """
        
        one_letter_word = []
        hash_table = {}
        
        for s in strings:
            len_s = len(s)
            if len_s == 1:
                one_letter_word.append(s)
                continue

            diff = []
            for i in range(1, len_s):
                d = ord(s[i])-ord(s[i-1])
                if d < 0: d += 26
                diff.append(d)
            
            if len_s not in hash_table:
                hash_table[len_s] = {}
            
            tuple_diff = tuple(diff)
            if tuple_diff not in hash_table[len_s]:
                hash_table[len_s][tuple_diff] = []
            hash_table[len_s][tuple_diff].append(s)
        
        res = [one_letter_word] if one_letter_word else []
        for len_s, word_diff_hash_table in hash_table.iteritems():
            for tuple_diff, word_list in word_diff_hash_table.iteritems():
                res.append(word_list)
        
        return res

