https://leetcode.com/problems/reverse-linked-list/

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        if head == None:
            return None
        
        former = head
        rear = head.next
        
        while rear != None:
            temp = rear.next
            rear.next = former
            former = rear
            rear = temp
        
        head.next = None
        
        return former

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        if not head:
            return None
        
        pre, rear = head, head.next
        
        while rear:
            temp = rear.next
            rear.next = pre
            pre = rear
            rear = temp
        
        head.next = None
        return pre
