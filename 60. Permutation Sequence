O(n^2) time, O(n) space
class Solution(object):
    def getPermutation(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: str
        """
        
        factorial = [1]
        for i in range(1, n):
            factorial.append(factorial[-1]*i)
        
        nums = [i for i in range(1, n+1)]
        res = ''
        k -= 1
        while n > 0:
            p = k/factorial[n-1]
            res += str(nums[p])
            nums = nums[:p]+nums[p+1:]
            k %= factorial[n-1]
            n -= 1
        
        return res
