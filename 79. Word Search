O(mn) time, O(mn) space
class Solution(object):
    def exist(self, board, word):
        """
        :type board: List[List[str]]
        :type word: str
        :rtype: bool
        """
        
        if not word: return True
        if not board: return False
        
        m, n, size = len(board), len(board[0]), len(word)
        diff = [(1, 0), (-1, 0), (0, 1), (0, -1)]
        visited = set()
        
        def myDFS(x, y, idx):
            if idx == size-1: return True
            
            visited.add((x, y))
            for d in diff:
                new_x, new_y = x+d[0], y+d[1]
                if 0 <= new_x < m and 0 <= new_y < n and (new_x, new_y) not in visited and board[new_x][new_y] == word[idx+1] and myDFS(new_x, new_y, idx+1):
                    return True
            
            visited.remove((x, y))
            return False
         
        for i in range(m):
            for j in range(n):
                if board[i][j] == word[0] and myDFS(i, j, 0):
                    return True
        return False
