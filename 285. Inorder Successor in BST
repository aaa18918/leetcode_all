# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def inorderSuccessor(self, root, p):
        """
        :type root: TreeNode
        :type p: TreeNode
        :rtype: TreeNode
        """
        
        if not root: return None
        
        node, parent = root, None
        while node:
            if node.val == p.val:
                if not node.right: return parent
                else:
                    res = node.right
                    while res.left:
                        res = res.left
                    return res
            elif node.val > p.val:
                node, parent = node.left, node
            else:
                node = node.right

        return None


# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def inorderSuccessor(self, root, p):
        """
        :type root: TreeNode
        :type p: TreeNode
        :rtype: TreeNode
        """
        
        if not root: return None
        
        node, parent = root, None
        while node:
            if node.val > p.val:
                node, parent = node.left, node
            else:
                node = node.right

        return parent
