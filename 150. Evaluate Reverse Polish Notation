O(n) time, O(n) space
class Solution(object):
    def evalRPN(self, tokens):
        """
        :type tokens: List[str]
        :rtype: int
        """
        
        my_stack = []
        for token in tokens:
            if token == '+':
                a = my_stack.pop()
                my_stack[-1] += a
            elif token == '-':
                a = my_stack.pop()
                my_stack[-1] -= a
            elif token == '*':
                a = my_stack.pop()
                my_stack[-1] *= a
            elif token == '/':
                a = my_stack.pop()
                if a < 0 < my_stack[-1] or my_stack[-1] < 0 < a:
                    my_stack[-1] = -(abs(my_stack[-1])/abs(a))
                else:
                    my_stack[-1] = abs(my_stack[-1])/abs(a)
            else:
                my_stack.append(int(token))
        
        return my_stack[-1] if tokens else 0
