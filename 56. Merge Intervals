O(nlgn) time, O(n) space
# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def merge(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
        
        intervals.sort(key = lambda x: x.start)
        
        cur = 0
        for idx in range(len(intervals)):
            if intervals[idx].start <= intervals[cur].end:
                intervals[cur].end = max(intervals[idx].end, intervals[cur].end)
            else:
                cur += 1
                intervals[cur] = intervals[idx]
        
        return intervals[:cur+1]
