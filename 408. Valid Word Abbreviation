Given a non-empty string s and an abbreviation abbr, return whether the string matches with the given abbreviation.

A string such as "word" contains only the following valid abbreviations:

["word", "1ord", "w1rd", "wo1d", "wor1", "2rd", "w2d", "wo2", "1o1d", "1or1", "w1r1", "1o2", "2r1", "3d", "w3", "4"]
Notice that only the above abbreviations are valid abbreviations of the string "word". Any other string is not a valid abbreviation of "word".

Note:
Assume s contains only lowercase letters and abbr contains only lowercase letters and digits.

Example 1:
Given s = "internationalization", abbr = "i12iz4n":

Return true.
Example 2:
Given s = "apple", abbr = "a2e":

Return false.


class Solution(object):
    def validWordAbbreviation(self, word, abbr):
        """
        :type word: str
        :type abbr: str
        :rtype: bool
        """
        
        len_word, len_abbr = len(word), len(abbr)
        index_word, index_abbr = 0, 0
        abbr_num = 0
        while index_word < len_word and index_abbr < len_abbr:
            if '0' <= abbr[index_abbr] <= '9':
                if abbr[index_abbr] == '0' and abbr_num == 0: return False
                abbr_num = abbr_num*10+int(abbr[index_abbr])
                index_abbr += 1
            else:
                if abbr_num > 0:
                    index_word += abbr_num
                    abbr_num = 0
                else:
                    if word[index_word] != abbr[index_abbr]: return False
                    index_word, index_abbr = index_word+1, index_abbr+1
        
        if abbr_num > 0: index_word += abbr_num
        return index_word == len_word and index_abbr == len_abbr
