O(1) time, 0(1) space push; O(n) time, O(n) space pop; O(1) time, O(1) space peek; O(1) time, O(1) space empty
class MyQueue(object):

    def __init__(self):
        """
        Initialize your data structure here.
        """
        
        self.my_stack = []

    def push(self, x):
        """
        Push element x to the back of queue.
        :type x: int
        :rtype: void
        """
        
        self.my_stack.append(x)
        
    def pop(self):
        """
        Removes the element from in front of queue and returns that element.
        :rtype: int
        """
        
        temp = []
        while self.my_stack:
            temp.append(self.my_stack.pop())
        
        val = temp.pop()
        while temp:
            self.my_stack.append(temp.pop())
        return val
        
    def peek(self):
        """
        Get the front element.
        :rtype: int
        """
        
        return self.my_stack[0]

    def empty(self):
        """
        Returns whether the queue is empty.
        :rtype: bool
        """
        
        return len(self.my_stack) == 0

# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
