O(mn) time, O(2n) space
class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        
        m, n = len(grid), len(grid[0])
        record = [[grid[m-1][n-1]]*n for _ in range(2)]
        
        for j in range(n-2, -1, -1):
            record[0][j] = record[0][j+1]+grid[m-1][j]
        
        for i in range(m-2, -1, -1):
            record[(m-1-i)%2][n-1] = record[1-(m-1-i)%2][n-1]+grid[i][n-1]
            for j in range(n-2, -1, -1):
                record[(m-1-i)%2][j] = min(record[1-(m-1-i)%2][j], record[(m-1-i)%2][j+1])+grid[i][j] 
        
        return record[(m-1)%2][0]
