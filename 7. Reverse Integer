Given a 32-bit signed integer, reverse digits of an integer.

Example 1:

Input: 123
Output: 321
Example 2:

Input: -123
Output: -321
Example 3:

Input: 120
Output: 21
Note:
Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [âˆ’231,  231 âˆ’ 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.


O(32) time, O(32) space
class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        m = abs(x)
        res = 0
        while m > 0:
            res = res*10+m%10
            m /= 10
        
        if x < 0:
            res = -res
        
        return res if -2**31 <= res < 2**31 else 0
