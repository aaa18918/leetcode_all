O(n) time, O(n) space
class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        
        my_stack = []
        for c in s:
            if c in "({[":
                my_stack.append(c)
            else:
                if c == ')':
                    if not my_stack or my_stack[-1] != '(':
                        return False
                    else:
                        my_stack.pop()
                elif c == '}':
                    if not my_stack or my_stack[-1] != '{':
                        return False
                    else:
                        my_stack.pop()
                else:
                    if not my_stack or my_stack[-1] != '[':
                        return False
                    else:
                        my_stack.pop()
        return not my_stack


O(n) time, O(n) space
class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        
        my_stack = []
        bracket_map = {')':'(', ']':'[', '}':'{'}
        for c in s:
            if c in "([{":
                my_stack.append(c)
            else:
                if not my_stack or bracket_map[c] != my_stack[-1]:
                    return False
                
                my_stack.pop()
        
        return not my_stack
