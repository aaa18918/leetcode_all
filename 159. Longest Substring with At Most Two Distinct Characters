O(n) time, O(1) space
class Solution(object):
    def lengthOfLongestSubstringTwoDistinct(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        hash_table = collections.defaultdict(int)
        left, size, count, res = 0, len(s), 0, 0
        for idx in range(size):
            hash_table[s[idx]] += 1
            count += 1
            
            if len(hash_table) > 2:
                res = max(count-1, res)
                
                while left < idx:
                    hash_table[s[left]] -= 1
                    count -= 1
                    if hash_table[s[left]] == 0:
                        del hash_table[s[left]]
                        left += 1
                        break
                    
                    left += 1
        
        return max(count, res)


最后一种解法没看懂：http://www.cnblogs.com/grandyang/p/5185561.html
