Given s1, s2, s3, find whether s3 is formed by the interleaving of s1 and s2.

Example 1:

Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbcbcac"
Output: true
Example 2:

Input: s1 = "aabcc", s2 = "dbbca", s3 = "aadbbbaccc"
Output: false


O(mn) time, O(mn) space
class Solution(object):
    def isInterleave(self, s1, s2, s3):
        """
        :type s1: str
        :type s2: str
        :type s3: str
        :rtype: bool
        """
        
        if len(s1)+len(s2) != len(s3):
            return False
        
        dp = [[False]*(len(s2)+1) for _ in range(len(s1)+1)]
        dp[0][0] = True
        
        for k in range(1, len(s3)+1):
            for i in range(max(0, k-len(s2)), min(len(s1)+1, k+1)):
                j = k-i
                
                if i == 0:
                    if s2[j-1] == s3[k-1]:
                        dp[0][j] = dp[0][j-1]
                elif j == 0:
                    if s1[i-1] == s3[k-1]:
                        dp[i][0] = dp[i-1][0]

                else:
                    if s1[i-1] == s3[k-1] and dp[i-1][j] or s2[j-1] == s3[k-1] and dp[i][j-1]:
                        dp[i][j] = True

        return dp[len(s1)][len(s2)]


还有更节约空间的解法。还没有看过。
