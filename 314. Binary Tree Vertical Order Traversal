# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def verticalOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        
        record = collections.defaultdict(list)
        
        min_col, max_col = sys.maxint, -sys.maxint-1
        my_queue = collections.deque([(root, 0)])
        
        while my_queue:
            node, col_num = my_queue.popleft()
            if not node: continue
            
            record[col_num].append(node.val)
            min_col, max_col = min(min_col, col_num), max(max_col, col_num)
            my_queue.append((node.left, col_num-1))
            my_queue.append((node.right, col_num+1))
        
        res = []
        for i in range(min_col, max_col+1):
            res.append(record[i])
        return res
