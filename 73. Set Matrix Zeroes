O(m*n) time, O(1) space
class Solution(object):
    def setZeroes(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """
        
        if not matrix: return
        
        m, n = len(matrix), len(matrix[0])
        row0, col0 = 1, 1
        
        for i in range(m):
            for j in range(n):
                if matrix[i][j] == 0:
                    if i == 0:
                        row0 = 0
                        
                    if j == 0:
                        col0 = 0
                    
                    if i != 0 and j != 0:
                        matrix[i][0] = 0
                        matrix[0][j] = 0
        
        for i in range(m-1, -1, -1):
            for j in range(n-1, -1, -1):
                if i == 0:
                    if row0 == 0:
                        matrix[i][j] = 0
                
                if j == 0:
                    if col0 == 0:
                        matrix[i][j] = 0
                
                if i != 0 and j != 0:
                    if matrix[0][j] == 0 or matrix[i][0] == 0:
                        matrix[i][j] = 0


O(m*n) time, O(1) space
class Solution(object):
    def setZeroes(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """
        
        m, n = len(matrix), len(matrix[0])
        
        col0 = 1
        for i in range(m):
            if matrix[i][0] == 0:
                col0 = 0
            for j in range(1, n):
                if matrix[i][j] == 0:
                    matrix[i][0], matrix[0][j] = 0, 0
        
        for i in range(m-1, -1, -1):
            for j in range(n-1, 0, -1):
                if matrix[i][0] == 0 or matrix[0][j] == 0:
                    matrix[i][j] = 0
            
            if col0 == 0:
                matrix[i][0] = 0
