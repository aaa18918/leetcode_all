O(n^2) time, O(
class Solution(object):
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        
        nums.sort()
        size = len(nums)
        res = nums[0]+nums[1]+nums[2]
        for idx in range(len(nums)):
            if idx > 0 and nums[idx] == nums[idx-1]: continue
            left, right = idx+1, size-1
            while left < right:
                cur_sum = nums[idx]+nums[left]+nums[right]
                if abs(cur_sum-target) < abs(res-target):
                    res = cur_sum
                
                if cur_sum == target:
                    return target
                elif cur_sum < target:
                    left += 1
                    while left < right and nums[left] == nums[left-1]:
                        left += 1
                else:
                    right -= 1
                    while left < right and nums[right] == nums[right+1]:
                        right -= 1
        return res
