Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.

Example 1:
Input: 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:
Input: 9973
Output: 9973
Explanation: No swap.
Note:
The given number is in the range [0, 108]


class Solution(object):
    def maximumSwap(self, num):
        """
        :type num: int
        :rtype: int
        """
        
        bucket = [0 for _ in range(10)]
        list_num = list(str(num))
        
        for idx in range(len(list_num)):
            bucket[ord(list_num[idx])-ord('0')] = idx
        
        for idx in range(len(list_num)):
            for d in range(9, int(list_num[idx]), -1):
                if bucket[d] > idx:
                    list_num[idx], list_num[bucket[d]] = list_num[bucket[d]], list_num[idx]
                    return int(''.join(list_num))
        
        return num


还有几种解法没看。
