O(n) time, O(n) space
class Solution(object):
    def minCost(self, costs):
        """
        :type costs: List[List[int]]
        :rtype: int
        """
        
        dp = [[0]*3 for _ in range(len(costs)+1)]
        
        for idx in range(len(costs)):
            dp[idx+1][0] = min(dp[idx][1], dp[idx][2])+costs[idx][0]
            dp[idx+1][1] = min(dp[idx][0], dp[idx][2])+costs[idx][1]
            dp[idx+1][2] = min(dp[idx][0], dp[idx][1])+costs[idx][2]
        
        return min(dp[len(costs)])
