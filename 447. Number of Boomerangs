O(n^2) time, O(n) space
class Solution(object):
    def numberOfBoomerangs(self, points):
        """
        :type points: List[List[int]]
        :rtype: int
        """
        
        res = 0
        for x1, y1 in points:
            dis = collections.defaultdict(int)
            for x2, y2 in points:
                dis[(x1-x2)**2+(y1-y2)**2] += 1
            
            for count in dis.itervalues():
                res += count*(count-1)
        
        return res
