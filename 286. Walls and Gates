O(mn) time, O(mn) space
class Solution(object):
    def wallsAndGates(self, rooms):
        """
        :type rooms: List[List[int]]
        :rtype: None Do not return anything, modify rooms in-place instead.
        """
        
        diff = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        
        def myBFS(i, j):
            my_queue = collections.deque([(i, j, 0)])

            while my_queue:
                x, y, dis = my_queue.popleft()
                rooms[x][y] = dis
                    
                for d in diff:
                    new_x, new_y = x+d[0], y+d[1]
                        
                    if 0 <= new_x < len(rooms) and 0 <= new_y < len(rooms[0]) and rooms[new_x][new_y] > dis+1:
                        my_queue.append((new_x, new_y, dis+1))
        
        for i in range(len(rooms)):
            for j in range(len(rooms[0])):
                if rooms[i][j] == 0:
                    myBFS(i, j)


别的解法没看。
