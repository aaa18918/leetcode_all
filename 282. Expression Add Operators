O(???) time, O(???) space
class Solution(object):
    def addOperators(self, num, target):
        """
        :type num: str
        :type target: int
        :rtype: List[str]
        """
        
        res = []
        
        def myHelp(exp, prev_sum, prev_val, start):
            if start >= len(num):
                if prev_sum == target:
                    res.append(exp)
                
                return
            
            for idx in range(start, len(num)):
                if num[start] == '0' and idx > start:
                    return
                
                cur_val = int(num[start:idx+1])
                myHelp('{}+{}'.format(exp, cur_val), prev_sum+cur_val, cur_val, idx+1)
                myHelp('{}-{}'.format(exp, cur_val), prev_sum-cur_val, -cur_val, idx+1)
                myHelp('{}*{}'.format(exp, cur_val), prev_sum-prev_val+prev_val*cur_val, prev_val*cur_val, idx+1)
        
        for idx in range(len(num)):
            if num[0] == '0' and idx > 0:
                break
            
            cur_val = int(num[:idx+1])
            myHelp(num[:idx+1], cur_val, cur_val, idx+1)
        
        return res


别的方法还没看，需要再看看！！！
