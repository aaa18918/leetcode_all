O(n) space, O(1) time
class TicTacToe(object):

    def __init__(self, n):
        """
        Initialize your data structure here.
        :type n: int
        """
        
        self.r = [0 for _ in range(n)]
        self.c = [0 for _ in range(n)]
        self.diag1, self.diag2 = 0, 0
        self.n = n
        
    def move(self, row, col, player):
        """
        Player {player} makes a move at ({row}, {col}).
        @param row The row of the board.
        @param col The column of the board.
        @param player The player, can be either 1 or 2.
        @return The current winning condition, can be either:
                0: No one wins.
                1: Player 1 wins.
                2: Player 2 wins.
        :type row: int
        :type col: int
        :type player: int
        :rtype: int
        """
        
        sign = 1 if player == 1 else -1
        aim = sign*self.n
        
        self.r[row] += sign
        self.c[col] += sign
        
        if row == col:
            self.diag1 += sign
        
        if row+col == self.n-1:
            self.diag2 += sign
        
        if self.r[row] == aim or self.c[col] == aim or self.diag1 == aim or self.diag2 == aim:
            return player
        
        return 0

# Your TicTacToe object will be instantiated and called as such:
# obj = TicTacToe(n)
# param_1 = obj.move(row,col,player)
