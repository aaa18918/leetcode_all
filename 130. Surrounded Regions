O(mn) time, O(mn) space
class Solution(object):
    def solve(self, board):
        """
        :type board: List[List[str]]
        :rtype: None Do not return anything, modify board in-place instead.
        """
        
        if not board or not board[0]:
            return
        
        diff = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        
        def myDFS(x, y):
            my_stack = set([(x, y)])
            
            while my_stack:
                i, j = my_stack.pop()
                board[i][j] = '1'
                
                for d in diff:
                    new_i, new_j = i+d[0], j+d[1]
                    if 0 <= new_i < len(board) and 0 <= new_j < len(board[0]) and board[new_i][new_j] == 'O':
                        my_stack.add((new_i, new_j))
        
        for x in range(len(board)):
            for y in (0, len(board[0])-1):
                if board[x][y] == 'O':
                    myDFS(x, y)
        
        for x in (0, len(board)-1):
            for y in range(len(board[0])):
                if board[x][y] == 'O':
                    myDFS(x, y)
        
        for x in range(len(board)):
            for y in range(len(board[0])):
                if board[x][y] == 'O':
                    board[x][y] = 'X'
                elif board[x][y] == '1':
                    board[x][y] = 'O'


Union-Find和别的解法都没看。
