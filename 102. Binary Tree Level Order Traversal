O(n) time, O(lgn) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def levelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        
        res, my_stack = [], [(root, 0)]
        while my_stack:
            node, level = my_stack.pop()
            if not node: continue
            if level == len(res):
                res.append([])
            
            res[level].append(node.val)
            my_stack.append((node.right, level+1))
            my_stack.append((node.left, level+1))
        return res
