You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move and therefore the other person will be the winner.

Write a function to determine if the starting player can guarantee a win.

Example:

Input: s = "++++"
Output: true 
Explanation: The starting player can guarantee a win by flipping the middle "++" to become "+--+".
Follow up:
Derive your algorithm's runtime complexity.


O(???) time, O(???) space
class Solution(object):
    def canWin(self, s):
        """
        :type s: str
        :rtype: bool
        """
        
        hash_table = {'': False, '+': False, '-': False}
        
        def myHelp(s):
            if s in hash_table:
                return hash_table[s]
            
            for idx in range(len(s)-1):
                if s[idx] == '+' and s[idx+1] == '+':
                    if not myHelp(s[:idx]+'-'+s[idx+2:]):
                        hash_table[s] = True
                        
                        return True
            
            hash_table[s] = False
            
            return False
        
        return myHelp(s)
