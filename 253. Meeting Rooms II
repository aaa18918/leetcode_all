O(nlgn) time, O(n) space
# Definition for an interval.
# class Interval(object):
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution(object):
    def minMeetingRooms(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: int
        """
        
        start, end = [], []
        for i in intervals:
            start.append(i.start)
            end.append(i.end)
        
        start.sort()
        end.sort()
        res, available = 0, 0
        s, e, size = 0, 0, len(start)
        while s < size:
            if start[s] < end[e]:
                if available == 0:
                    res += 1
                else:
                    available -= 1
                s += 1
            else:
                available += 1
                e += 1
        return res


别的解法还没看。
