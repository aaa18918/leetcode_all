https://leetcode.com/problems/unique-paths/
class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        
        if m < 1 or n < 1:
            return 0
        
        space, i = [[1 for i in range(0,n)] for j in range(0,m)], m-2
        
        while i >= 0:
            j = n-2
            while j >= 0:
                space[i][j] = space[i+1][j]+space[i][j+1]
                j -= 1
            i -= 1
        
        return space[0][0]

class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        
        if m < 1 or n < 1:
            return 0
        
        record = [[1 for i in range(n)] for j in range(m)]
        
        for i in range(m-2, -1, -1):
            for j in range(n-2, -1, -1):
                record[i][j] = record[i+1][j]+record[i][j+1]
        
        return record[0][0]
