O(???) time, O(???) space
class Solution(object):
    def combinationSum2(self, candidates, target):
        """
        :type candidates: List[int]
        :type target: int
        :rtype: List[List[int]]
        """
        
        candidates.sort()
        size = len(candidates)
        res = []
        
        def myDFS(nums, idx, target):
            if target == 0:
                res.append(nums)
                return
            
            for i in range(idx, size):
                if candidates[i] <= target and (i-idx == 0 or candidates[i] != candidates[i-1]):
                    myDFS(nums+[candidates[i]], i+1, target-candidates[i])
        
        myDFS([], 0, target)
        return res


还有一种DP的解法。
