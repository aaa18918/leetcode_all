O(n) time, O(lgn) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def findSecondMinimumValue(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        
        self.res = sys.maxint
        
        my_stack = [root]
        while my_stack:
            node = my_stack.pop()
            if root.val < node.val < self.res:
                self.res = node.val
            elif root.val == node.val:
                if node.left:
                    my_stack.append(node.left)
                
                if node.right:
                    my_stack.append(node.right)
        
        return self.res if self.res != sys.maxint else -1


还有一些别的解法没有看完。
