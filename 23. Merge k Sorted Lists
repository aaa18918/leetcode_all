Share
Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

Example:

Input:
[
  1->4->5,
  1->3->4,
  2->6
]
Output: 1->1->2->3->4->4->5->6


O(mnlgm) time, O(m) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        
        heap = []
        
        for l in lists:
            if l:
                heap.append((l.val, l))
        
        heapq.heapify(heap)
        
        dummy_head = ListNode(0)
        p = dummy_head
        while heap:
            _, node = heapq.heappop(heap)
            p.next = node
            p = p.next
            
            if node.next:
                heapq.heappush(heap, (node.next.val, node.next))
            
        return dummy_head.next


O(mnlg(mn)) time, O(???) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        
        def merge2Lists(l, r):
            dummy_head = ListNode(0)
            p = dummy_head
            
            while l or r:
                if l and r:
                    if l.val < r.val:
                        p.next = l
                        l = l.next
                    else:
                        p.next = r
                        r = r.next
                    
                    p = p.next
                elif l:
                    p.next = l
                    l, p = l.next, p.next
                else:
                    p.next = r
                    r, p = r.next, p.next
            
            return dummy_head.next
        
        length = len(lists)
        if length == 0:
            return None
        elif length == 1:
            return lists[0]
        
        return merge2Lists(self.mergeKLists(lists[:length/2]), self.mergeKLists(lists[length/2:]))
