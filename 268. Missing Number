O(2n) time, O(1) space
class Solution(object):
    def missingNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        nums.append(-1)
        
        idx, size = 0, len(nums)
        while idx < size:
            if nums[idx] == idx or nums[idx] == -1:
                idx += 1
            else:
                target = nums[idx]
                nums[idx], nums[target] = nums[target], nums[idx]
        
        for idx in range(size):
            if nums[idx] != idx:
                return idx


O(n) time, O(1) space
class Solution(object):
    def missingNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        size = len(nums)
        res = size
        for idx in range(size):
            res ^= idx^nums[idx]
        return res
