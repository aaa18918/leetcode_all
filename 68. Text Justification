class Solution(object):
    def fullJustify(self, words, maxWidth):
        """
        :type words: List[str]
        :type maxWidth: int
        :rtype: List[str]
        """
        
        if maxWidth == 0: return [""]
        
        res = []
        idx, size = 0, len(words)
        
        while idx < size:
            lengthCount, wordList = 0, []
            while lengthCount <= maxWidth-len(wordList) and idx < size:
                lengthCount += len(words[idx])
                wordList.append(words[idx])
                idx += 1
            
            if lengthCount > maxWidth-len(wordList)+1:
                wordList.pop()
                idx -= 1
                lengthCount -= len(words[idx])
            
            spaces = maxWidth-lengthCount
            
            if len(wordList) == 1:
                res.append(wordList[0]+' '*spaces)
                continue
            
            if idx == size:
                res.append(' '.join(wordList)+' '*(maxWidth-lengthCount-len(wordList)+1))
                break
            
            numSpaces = spaces/(len(wordList)-1)
            additionalSpaces = spaces%(len(wordList)-1)
            temp = ""
            for i in range(len(wordList[:-1])):
                if i < additionalSpaces:
                    temp += wordList[i]+' '*(numSpaces+1)
                else:
                    temp += wordList[i]+' '*numSpaces
            temp += wordList[-1]
            res.append(temp)
        
        return res


没看别的答案。
