O(n) time, O(n) space
class Solution(object):
    def isIsomorphic(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        
        if len(s) != len(t):
            return False
        
        s_to_t_map, t_to_s_map = collections.defaultdict(str), collections.defaultdict(str)
        for idx in range(len(s)):
            if not s_to_t_map[s[idx]] and not t_to_s_map[t[idx]]:
                s_to_t_map[s[idx]], t_to_s_map[t[idx]] = t[idx], s[idx]
                
            if s_to_t_map[s[idx]] != t[idx] or t_to_s_map[t[idx]] != s[idx]:
                return False
        
        return True
