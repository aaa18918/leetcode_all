class Solution(object):
    def lengthOfLongestSubstringTwoDistinct(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        hash_table, left, res, dis_num = {}, -1, 0, 0

        for i, char in enumerate(s):
            if char in hash_table:
                hash_table[char] += 1
            else:
                if dis_num == 2:
                    res = max(res, i-1-left)
                    while dis_num == 2:
                        left += 1
                        hash_table[s[left]] -= 1
                        if hash_table[s[left]] == 0:
                            del hash_table[s[left]]
                            dis_num -= 1
                
                hash_table[char] = 1
                dis_num += 1
        
        return max(res, len(s)-1-left)


class Solution(object):
    def lengthOfLongestSubstringTwoDistinct(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        hash_table, left, res, dis_num = {}, -1, 0, 0
        
        for i, char in enumerate(s):
            if char in hash_table:
                hash_table[char] = i
            else:
                if dis_num == 2:
                    res = max(res, i-1-left)
                    while dis_num == 2:
                        left += 1
                        if hash_table[s[left]] == left:
                            del hash_table[s[left]]
                            dis_num -= 1
                
                hash_table[char] = i
                dis_num += 1
        
        return max(res, len(s)-1-left)


最后一种解法没看懂：http://www.cnblogs.com/grandyang/p/5185561.html
