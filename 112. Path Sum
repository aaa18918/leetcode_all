O(n) time, O(lgn) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def hasPathSum(self, root, sum):
        """
        :type root: TreeNode
        :type sum: int
        :rtype: bool
        """
        
        if not root: return False
        
        my_stack = [(root, root.val)]
        while my_stack:
            node, cur_sum = my_stack.pop()
            if not node.left and not node.right and cur_sum == sum:
                return True
            
            if node.left:
                my_stack.append((node.left, cur_sum+node.left.val))
            
            if node.right:
                my_stack.append((node.right, cur_sum+node.right.val))
        return False
