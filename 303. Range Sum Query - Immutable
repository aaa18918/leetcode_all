Given an integer array nums, find the sum of the elements between indices i and j (i â‰¤ j), inclusive.

Example:
Given nums = [-2, 0, 3, -5, 2, -1]

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
Note:
You may assume that the array does not change.
There are many calls to sumRange function.


O(n) initialization time, O(1) query time, O(n) space
class NumArray(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        
        if not nums: return
        
        self.sum_to = [nums[0]]
        for i in range(1, len(nums)):
            self.sum_to.append(self.sum_to[-1]+nums[i])

    def sumRange(self, i, j):
        """
        :type i: int
        :type j: int
        :rtype: int
        """
        
        if i == 0: return self.sum_to[j]
        else: return self.sum_to[j]-self.sum_to[i-1]

# Your NumArray object will be instantiated and called as such:
# obj = NumArray(nums)
# param_1 = obj.sumRange(i,j)
