O(n) time, O(???) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def binaryTreePaths(self, root):
        """
        :type root: TreeNode
        :rtype: List[str]
        """
        
        if not root: return []
        
        res = []
        def myDFS(path, node):
            if not node.left and not node.right:
                res.append(path)
                return
            
            if node.left:
                myDFS(path+'->{}'.format(node.left.val), node.left)
            
            if node.right:
                myDFS(path+'->{}'.format(node.right.val), node.right)
        
        myDFS(str(root.val), root)
        return res
