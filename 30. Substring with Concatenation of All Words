class Solution(object):
    def findSubstring(self, s, words):
        """
        :type s: str
        :type words: List[str]
        :rtype: List[int]
        """
        
        size = len(words[0])
        counter = collections.defaultdict(int)
        for word in words:
            counter[word] += 1

        res = []
        length = len(words)
        
        for idx in range(len(s)-size*length+1):
            hash_table = collections.defaultdict(int)
            j = 0
            while j < length:
                cur_word = s[idx+j*size:idx+(j+1)*size]
                if cur_word not in counter:
                    break
                
                hash_table[cur_word] += 1
                if hash_table[cur_word] > counter[cur_word]:
                    break
                
                j += 1

            if j == length:
                res.append(idx)
        
        return res


时间复杂度有争议。
