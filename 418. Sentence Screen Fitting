Given a rows x cols screen and a sentence represented by a list of non-empty words, find how many times the given sentence can be fitted on the screen.

Note:

A word cannot be split into two lines.
The order of words in the sentence must remain unchanged.
Two consecutive words in a line must be separated by a single space.
Total words in the sentence won't exceed 100.
Length of each word is greater than 0 and won't exceed 10.
1 ≤ rows, cols ≤ 20,000.
Example 1:

Input:
rows = 2, cols = 8, sentence = ["hello", "world"]

Output: 
1

Explanation:
hello---
world---

The character '-' signifies an empty space on the screen.
Example 2:

Input:
rows = 3, cols = 6, sentence = ["a", "bcd", "e"]

Output: 
2

Explanation:
a-bcd- 
e-a---
bcd-e-

The character '-' signifies an empty space on the screen.
Example 3:

Input:
rows = 4, cols = 5, sentence = ["I", "had", "apple", "pie"]

Output: 
1

Explanation:
I-had
apple
pie-I
had--

The character '-' signifies an empty space on the screen.


O(rows) time, O(sentence) space
class Solution(object):
    def wordsTyping(self, sentence, rows, cols):
        """
        :type sentence: List[str]
        :type rows: int
        :type cols: int
        :rtype: int
        """
        
        s = ' '.join(sentence)+' '
        total = 0
        for idx in range(rows):
            total += cols-1
            if s[total%len(s)] == ' ':
                total += 1
            elif s[total%len(s)+1] == ' ':
                total += 2
            else:
                while total > 0 and s[(total-1)%len(s)] != ' ':
                    total -= 1
        return total/len(s)
 
有点没看懂，解释在这里： https://leetcode.com/problems/sentence-screen-fitting/discuss/90869/Python-with-explanation
其它解答还都没有看。
