Given a time represented in the format "HH:MM", form the next closest time by reusing the current digits. There is no limit on how many times a digit can be reused.

You may assume the given input string is always valid. For example, "01:34", "12:09" are all valid. "1:34", "12:9" are all invalid.

Example 1:

Input: "19:34"
Output: "19:39"
Explanation: The next closest time choosing from digits 1, 9, 3, 4, is 19:39, which occurs 5 minutes later.  It is not 19:33, because this occurs 23 hours and 59 minutes later.
Example 2:

Input: "23:59"
Output: "22:22"
Explanation: The next closest time choosing from digits 2, 3, 5, 9, is 22:22. It may be assumed that the returned time is next day's time since it is smaller than the input time numerically.


O(24*60) time, O(1) space
class Solution(object):
    def nextClosestTime(self, time):
        """
        :type time: str
        :rtype: str
        """
        
        digits = {x for y in time.split(':') for x in y}
        h, m = time.split(':')
        while True:
            h, m = (str(int(h)+1), '00') if m == '59' else (h, str(int(m)+1))
            if len(h) == 1: h = '0'+h
            if len(m) == 1: m = '0'+m
            if h >= '24': h = '00'
            if all([x in digits for x in h+m]):
                return h+':'+m


别的解法还没看。
