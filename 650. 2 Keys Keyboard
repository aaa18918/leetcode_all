class Solution(object):
    def minSteps(self, n):
        """
        :type n: int
        :rtype: int
        """
        
        dp = [sys.maxint for _ in range(n+1)]
        dp[1] = 0
        for i in range(2, n+1):
            for j in range(1, i):
                if i%j == 0:
                    dp[i] = min(dp[i], dp[j]+i/j)
        
        return dp[n]


class Solution(object):
    def minSteps(self, n):
        """
        :type n: int
        :rtype: int
        """
        
        dp = [sys.maxint for _ in range(n+1)]
        dp[1] = 0
        for i in range(2, n+1):
            for j in range(i-1, 0, -1):
                if i%j == 0:
                    dp[i] = dp[j]+i/j
                    break
        
        return dp[n]


class Solution(object):
    def minSteps(self, n):
        """
        :type n: int
        :rtype: int
        """
        
        res = 0
        while n > 1:
            for i in range(n-1, 0, -1):
                if n%i == 0:
                    res += n/i
                    n = i
                    break
        return res
