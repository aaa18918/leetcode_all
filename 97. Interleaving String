O(mn) time, O(mn) space
class Solution(object):
    def isInterleave(self, s1, s2, s3):
        """
        :type s1: str
        :type s2: str
        :type s3: str
        :rtype: bool
        """
        
        if not s3:
            return not s1 and not s2
        
        if len(s1)+len(s2) != len(s3):
            return False
        
        dp = [[False]*(len(s2)+1) for _ in range(len(s1)+1)]
        dp[0][0] = True
        
        for i in range(len(s3)+1):
            for j in range(min(i, len(s1))+1):
                if i-j > len(s2):
                    continue
                
                if j > 0 and s1[j-1] == s3[i-1] and dp[j-1][i-j] or i-j > 0 and s2[i-j-1] == s3[i-1] and dp[j][i-j-1]:
                    dp[j][i-j] = True
                
        return dp[len(s1)][len(s2)]


还有更节约空间的解法。还没有看过。
