O(???) time, O(???) space
class Solution(object):
    def findWords(self, board, words):
        """
        :type board: List[List[str]]
        :type words: List[str]
        :rtype: List[str]
        """
        
        trie = {}
        for word in words:
            p = trie
            for c in word:
                if c not in p:
                    p[c] = {}
                p = p[c]
            p['#'] = {}
        
        res = set()
        diff = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        
        def myDFS(cur_word, x, y, p):
            if '#' in p:
                res.add(cur_word)
            
            temp = board[x][y]
            board[x][y] = '@'
            for d in diff:
                new_x, new_y = x+d[0], y+d[1]
                if 0 <= new_x < len(board) and 0 <= new_y < len(board[0]) and board[new_x][new_y] in p:
                    myDFS(cur_word+board[new_x][new_y], new_x, new_y, p[board[new_x][new_y]])
            board[x][y] = temp

        for i in range(len(board)):
            for j in range(len(board[0])):
                if board[i][j] in trie:
                    myDFS(board[i][j], i, j, trie[board[i][j]])
        return list(res)
