O(1) time, O(n) space
class ListNode(object):
    
    def __init__(self, key, val):
        self.key = key
        self.val = val
        self.prev = None
        self.next = None

class LRUCache(object):

    def __init__(self, capacity):
        """
        :type capacity: int
        """
        
        self.capacity = capacity
        self.hash_table = {}
        self.head, self.tail = ListNode(0, 0), ListNode(0, 0)
        self.head.next = self.tail
        self.tail.prev = self.head
    
    def _move_node_to_top(self, key):
        node = self.hash_table[key]
        node.prev.next = node.next
        node.next.prev = node.prev
        
        node.prev, node.next = self.head, self.head.next
        self.head.next.prev = node
        self.head.next = node
    
    def get(self, key):
        """
        :type key: int
        :rtype: int
        """
        
        if key in self.hash_table:
            self._move_node_to_top(key)
            return self.hash_table[key].val
        
        return -1

    def put(self, key, value):
        """
        :type key: int
        :type value: int
        :rtype: void
        """
    
        if key in self.hash_table:
            node = self.hash_table[key]
            node.val = value
            self._move_node_to_top(key)
        else:
            if self.capacity > 0:
                node = ListNode(key, value)
                node.prev, node.next = self.head, self.head.next
                self.head.next.prev = node
                self.head.next = node
                self.hash_table[key] = node
                
                self.capacity -= 1
            else:
                node = self.tail.prev
                
                del self.hash_table[node.key]
                self.hash_table[key] = node
                
                node.key, node.val = key, value
                self._move_node_to_top(key)

# Your LRUCache object will be instantiated and called as such:
# obj = LRUCache(capacity)
# param_1 = obj.get(key)
# obj.put(key,value)

注意每个get和put都需要更新一下整个数据结构。
