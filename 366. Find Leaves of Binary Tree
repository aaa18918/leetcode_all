O(n) time, O(???) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def findLeaves(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        
        res = []
        def myHelp(node):
            if not node:
                return -1
            
            left = myHelp(node.left)
            right = myHelp(node.right)
            
            level = max(left, right)+1
            if level == len(res):
                res.append([node.val])
            else:
                res[level].append(node.val)
            
            return level
        
        myHelp(root)
        return res
