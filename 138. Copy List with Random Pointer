O(3n) time, O(n) space 
"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, next, random):
        self.val = val
        self.next = next
        self.random = random
"""
class Solution(object):
    def copyRandomList(self, head):
        """
        :type head: Node
        :rtype: Node
        """
        
        if not head:
            return None
        
        p = head
        while p:
            new_p = Node(p.val, p.next, None)
            p.next = new_p
            p = p.next.next
        
        p = head
        while p:
            if p.random:
                p.next.random = p.random.next
            
            p = p.next.next
        
        p, q, new_head = head, head.next, head.next
        while p.next.next:
            p.next, q.next = p.next.next, q.next.next
            p, q = p.next, q.next
        
        p.next, q.next = None, None
        
        return new_head
