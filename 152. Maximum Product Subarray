Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.


O(n) time, O(1) space
class Solution(object):
    def maxProduct(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        res = nums[0]
        cur_max, cur_min = nums[0], nums[0]
        for idx in range(1, len(nums)):
            if nums[idx] < 0:
                cur_max, cur_min = cur_min, cur_max
            
            cur_max = max(cur_max*nums[idx], nums[idx])
            cur_min = min(cur_min*nums[idx], nums[idx])
            
            res = max(res, cur_max)
        
        return res
