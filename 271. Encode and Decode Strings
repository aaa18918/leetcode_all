O(n) time, O(n) space
class Codec:

    def encode(self, strs):
        """Encodes a list of strings to a single string.
        
        :type strs: List[str]
        :rtype: str
        """
        
        res = ''
        for s in strs:
            res += '{}/{}'.format(len(s), s)
        
        return res

    def decode(self, s):
        """Decodes a single string to a list of strings.
        
        :type s: str
        :rtype: List[str]
        """
        
        res = []
        count, idx = 0, 0
        while idx < len(s):
            while idx < len(s) and s[idx] != '/':
                count = count*10+int(s[idx])
                idx += 1
            
            cur = ''
            for _ in range(count):
                idx += 1
                cur += s[idx]
            
            idx += 1
            count = 0
            
            res.append(cur)
        
        return res

# Your Codec object will be instantiated and called as such:
# codec = Codec()
# codec.decode(codec.encode(strs))
