O(???) time, O(???) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def buildTree(self, inorder, postorder):
        """
        :type inorder: List[int]
        :type postorder: List[int]
        :rtype: TreeNode
        """
        
        hash_table = {}
        for idx in range(len(inorder)):
            hash_table[inorder[idx]] = idx
        
        def myHelp(left, right):
            if left > right:
                return None
            
            root_val = postorder.pop()
            idx = hash_table[root_val]
            root = TreeNode(root_val)
            
            root.right = myHelp(idx+1, right)
            root.left = myHelp(left, idx-1)

            return root
        
        return myHelp(0, len(inorder)-1)
