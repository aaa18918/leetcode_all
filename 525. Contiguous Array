Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
Note: The length of the given binary array will not exceed 50,000.


class Solution(object):
    def findMaxLength(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        
        record, count, res = {0: -1}, 0, 0
        for idx, num in enumerate(nums):
            if num == 0:
                count -= 1
            else:
                count += 1
            
            if count not in record:
                record[count] = idx
            else:
                res = max(res, idx-record[count])
        return res


别的解法还没看。
