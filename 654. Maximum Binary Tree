O(nlgn) time, O(1) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def constructMaximumBinaryTree(self, nums):
        """
        :type nums: List[int]
        :rtype: TreeNode
        """
        
        if not nums: return None
        
        max_val, max_idx = nums[0], 0
        for idx in range(len(nums)):
            if nums[idx] > max_val:
                max_val, max_idx = nums[idx], idx
        
        root = TreeNode(max_val)
        left_subtree = self.constructMaximumBinaryTree(nums[:max_idx])
        right_subtree = self.constructMaximumBinaryTree(nums[max_idx+1:])
        
        root.left, root.right = left_subtree, right_subtree
        return root
