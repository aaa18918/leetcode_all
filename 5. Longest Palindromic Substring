Given a string s, find the longest palindromic substring in s. You may assume that the maximum length of s is 1000.

Example 1:

Input: "babad"
Output: "bab"
Note: "aba" is also a valid answer.
Example 2:

Input: "cbbd"
Output: "bb"


O(n^2) time, O(res) space
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        def palindrome(left, right):
            while left >= 0 and right < len(s) and s[left] == s[right]:
                left, right = left-1, right+1
            
            return left+1, right-1
        
        res_left, res_right = 0, 0
        for idx in range(len(s)):
            left, right = palindrome(idx, idx)
            if right-left > res_right-res_left:
                res_left, res_right = left, right
            
            if idx < len(s)-1:
                left, right = palindrome(idx, idx+1)
                if right-left > res_right-res_left:
                    res_left, res_right = left, right
        
        return s[res_left:res_right+1]
