O(mn) time, O(max(m, n)) space
class Solution(object):
    def maxAreaOfIsland(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        
        self.res = 0
        diff = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        
        def myDFS(i, j):
            count = 0
            my_stack = [(i, j)]
            while my_stack:
                x, y = my_stack.pop()
                if grid[x][y] == 0:
                    continue

                count += 1
                grid[x][y] = 0
                for d in diff:
                    if 0 <= x+d[0] < len(grid) and 0 <= y+d[1] < len(grid[0]) and grid[x+d[0]][y+d[1]] == 1:
                        my_stack.append((x+d[0], y+d[1]))
                
            self.res = max(self.res, count)
        
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == 1:
                    myDFS(i, j)
        
        return self.res
