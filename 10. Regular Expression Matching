O(n^2) time, O(n^2) space
class Solution(object):
    def isMatch(self, s, p):
        """
        :type s: str
        :type p: str
        :rtype: bool
        """
        
        dp = [[False]*(len(p)+1) for _ in range((len(s)+1))]
        dp[0][0] = True
        
        for j in range(1, len(p)):
            if p[j] == '*' and p[j-1] != '*':
                dp[0][j+1] = dp[0][j-1]
        
        for i in range(len(s)):
            for j in range(len(p)):
                if s[i] == p[j] or p[j] == '.':
                    dp[i+1][j+1] = dp[i][j]
                elif p[j] == '*':
                    if j > 0:
                        if s[i] == p[j-1] or p[j-1] == '.':
                            dp[i+1][j+1] = dp[i+1][j] or dp[i][j] or dp[i][j+1] or dp[i+1][j-1]
                        else:
                            dp[i+1][j+1] = dp[i+1][j-1]
        
        return dp[len(s)][len(p)]
