Depends on the condition for convergence, approximately O(lgn) time, O(1) space
class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        res = 1
        delta = (res**2-x)*1.0/(2*res)
        while abs(delta) >= 0.5:
            res -= delta
            delta = (res**2-x)/(2*res)
        
        res = int(res)
        for r in (res+1, res, res-1):
            if r**2 <= x:
                return r


O(lgn) time, O(1) space
class Solution(object):
    def mySqrt(self, x):
        """
        :type x: int
        :rtype: int
        """
        
        left, right = 0, x/2+1
        while left <= right:
            mid = (left+right)/2
            cur = mid**2
            if cur == x:
                return mid
            elif cur < x:
                left = mid+1
            else:
                right = mid-1
        
        return left-1
