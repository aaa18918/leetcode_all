amortize O(lgn) time, worst O(n) time, O(1) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def upsideDownBinaryTree(self, root):
        """
        :type root: TreeNode
        :rtype: TreeNode
        """
        
        if not root:
            return None
        
        res = root
        cur = root
        next_node = root.left
        cur_right = root.right
        root.left, root.right = None, None
        while next_node:
            tmp = next_node.left
            next_node.left = cur_right
            cur_right = next_node.right
            next_node.right = cur
            
            cur = next_node
            next_node = tmp
        
        return cur
