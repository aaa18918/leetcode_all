O(1) time, O(1) space
class Solution(object):
    def numberToWords(self, num):
        """
        :type num: int
        :rtype: str
        """
        
        if num == 0:
            return 'Zero'
        
        num_less_than_twenty = ['Zero', 'One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten',
                                'Eleven', 'Twelve', 'Thirteen', 'Fourteen', 'Fifteen', 'Sixteen', 'Seventeen', 'Eighteen',
                                'Nineteen']
        
        tens_digit = ['Twenty', 'Thirty', 'Forty', 'Fifty', 'Sixty', 'Seventy', 'Eighty', 'Ninety']
        
        thousands = ['Thousand', 'Million', 'Billion']
        
        def convertNumberLessThanThousandToWords(num):
            res = []
            if num >= 100:
                res += [num_less_than_twenty[num/100], 'Hundred']
                num %= 100
            
            if num >= 20:
                res.append(tens_digit[num/10-2])
                num %= 10
            
            if num > 0:
                res.append(num_less_than_twenty[num])
            
            return res
        
        res, idx = [], -1
        while num > 0:
            if num%1000 > 0:
                if idx >= 0:
                    res = convertNumberLessThanThousandToWords(num%1000)+[thousands[idx]]+res
                else:
                    res = convertNumberLessThanThousandToWords(num%1000)
            
            num /= 1000
            
            idx += 1
        
        return ' '.join(res)


注意这个输入例子：1000000，不是One Thousand Million而是One Million。
