O(n) time, O(1) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseKGroup(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """

        dummy_head = ListNode(0)
        dummy_head.next = head
        prev, slow, fast = dummy_head, dummy_head, dummy_head
        while True:
            t = k
            while t > 0 and fast:
                fast = fast.next
                t -= 1
            
            if not fast: break
            slow = slow.next
            tail = fast.next
            p, q = slow, slow.next
            while q is not tail:
                temp = q.next
                q.next = p
                p, q = q, temp
            slow.next = tail
            prev.next = p
            
            prev, slow, fast = slow, slow, slow
        return dummy_head.next
