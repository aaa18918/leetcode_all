class Solution(object):
    def longestPalindromeSubseq(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        if not s: return 0
        len_s = len(s)
        
        dp = [[0]*len_s for _ in range(len_s)]
        
        for i in range(len_s-1, -1, -1):
            dp[i][i] = 1
            for j in range(i+1, len_s):
                if s[i] == s[j]:
                    dp[i][j] = dp[i+1][j-1]+2
                else:
                    dp[i][j] = max(dp[i][j-1], dp[i+1][j])
        
        return dp[0][len_s-1]


还有一个space O(n)和O(2n)的没看懂。
