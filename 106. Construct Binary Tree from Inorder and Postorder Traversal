Average O(nlgn) time, Worst O(n^2) time, O(1) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def buildTree(self, inorder, postorder):
        """
        :type inorder: List[int]
        :type postorder: List[int]
        :rtype: TreeNode
        """
        
        def myDFS(inorder):
            if not inorder:
                return None
            
            root_val = postorder.pop()
            idx = inorder.index(root_val)
            
            root = TreeNode(root_val)
            
            right = myDFS(inorder[idx+1:])
            left = myDFS(inorder[:idx])
            
            root.right, root.left = right, left
            return root
        
        return myDFS(inorder)
