O(mn) time, O(k) space
class Solution(object):
    def exist(self, board, word):
        """
        :type board: List[List[str]]
        :type word: str
        :rtype: bool
        """
        
        diff = [(-1, 0), (1, 0), (0, -1), (0, 1)]
        
        my_set = set()
        
        def myDFS(idx, i, j):    
            if idx == len(word)-1:
                    return True
                
            my_set.add((i, j))
                
            for d in diff:
                new_i, new_j = i+d[0], j+d[1]
                if 0 <= new_i < len(board) and 0 <= new_j < len(board[0]) and (new_i, new_j) not in my_set and board[new_i][new_j] == word[idx+1] and myDFS(idx+1, new_i, new_j):
                    return True
                
            my_set.remove((i, j))
        
        for i in range(len(board)):
            for j in range(len(board[0])):
                if word and word[0] == board[i][j] and myDFS(0, i ,j):
                    return True
        
        return False if word else True
