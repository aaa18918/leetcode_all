Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

Example:
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Input: word1 = “coding”, word2 = “practice”
Output: 3
Input: word1 = "makes", word2 = "coding"
Output: 1
Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.


O(n) time, O(1) space
class Solution(object):
    def shortestDistance(self, words, word1, word2):
        """
        :type words: List[str]
        :type word1: str
        :type word2: str
        :rtype: int
        """
        
        res = sys.maxint
        idx1, idx2 = -1, -1
        for idx, word in enumerate(words):
            if word == word1:
                if idx2 != -1:
                    res = min(res, idx-idx2)
                
                idx1 = idx
            elif word == word2:
                if idx1 != -1:
                    res = min(res, idx-idx1)
                
                idx2 = idx
        
        return res
