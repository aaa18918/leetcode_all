O(mn) time, O(mn) space
class Solution(object):
    def isInterleave(self, s1, s2, s3):
        """
        :type s1: str
        :type s2: str
        :type s3: str
        :rtype: bool
        """
        
        if len(s3) != len(s1)+len(s2):
            return False
        
        dp = [[False]*(len(s2)+1) for _ in range(len(s1)+1)]
        dp[0][0] = True
        
        for j in range(len(s2)):
            if s2[j] == s3[j] and dp[0][j]:
                dp[0][j+1] = True
        
        for k in range(len(s3)):
            for i in range(max(0, k-len(s2)), min(k+1, len(s1))):
                j = k-i-1
                if j < 0:
                    if s1[i] == s3[k] and dp[i][0]:
                        dp[i+1][0] = True
                
                elif s1[i] == s3[k] and dp[i][j+1] or s2[j] == s3[k] and dp[i+1][j]:
                    dp[i+1][j+1] = True
        
        return dp[len(s1)][len(s2)]


还有更节约空间的解法。还没有看过。
