class Solution(object):
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        
        len_circular = len(gas)
        gas, cost = gas+gas, cost+cost
        
        for i in range(len_circular):
            cur_sum = 0
            for j in range(i, i+len_circular):
                cur_sum += gas[j]-cost[j]
                if cur_sum < 0:
                    break
            
            if cur_sum >= 0:
                return i
        
        return -1

class Solution(object):
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        
        cur_sum = 0
        res = 0
        
        for i in range(len(gas)):
            cur_sum += gas[i]-cost[i]
            if cur_sum < 0:
                res = i+1
                cur_sum = 0
            
        return res if sum(gas) >= sum(cost) else -1
