Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher's h-index.

According to the definition of h-index on Wikipedia: "A scientist has index h if h of his/her N papers have at least h citations each, and the other N âˆ’ h papers have no more than h citations each."

Example:

Input: citations = [3,0,6,1,5]
Output: 3 
Explanation: [3,0,6,1,5] means the researcher has 5 papers in total and each of them had 
             received 3, 0, 6, 1, 5 citations respectively. 
             Since the researcher has 3 papers with at least 3 citations each and the remaining 
             two with no more than 3 citations each, her h-index is 3.
Note: If there are several possible values for h, the maximum one is taken as the h-index.


O(nlgn) time, O(1) space
class Solution(object):
    def hIndex(self, citations):
        """
        :type citations: List[int]
        :rtype: int
        """
        
        citations.sort()
        size = len(citations)
        
        for idx in range(len(citations)-1, -1, -1):
            if size-idx > citations[idx]:
                return size-idx-1
        
        return size


O(len(citations)) time, O(len(citations)) space
class Solution(object):
    def hIndex(self, citations):
        """
        :type citations: List[int]
        :rtype: int
        """

        size = len(citations)
        citation, count = [0]*(size+1), 0
        for c in citations:
            if c > size:
                count += 1
                continue

            citation[c] += 1

        for i in range(size, -1, -1):
            if count+citation[i] >= i:
                return i
            else:
                count += citation[i]
        
        return size
