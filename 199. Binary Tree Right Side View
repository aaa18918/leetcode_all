O(n) time, O(n) space
# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def rightSideView(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        
        if not root:
            return []
        
        res, my_stack = [], [(root, 0)]
        while my_stack:
            node, level = my_stack.pop()
            if level >= len(res):
                res.append(node.val)
            
            if node.left:
                my_stack.append((node.left, level+1))
            
            if node.right:
                my_stack.append((node.right, level+1))
        
        return res
