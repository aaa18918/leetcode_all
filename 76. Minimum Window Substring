O(n) time, O(n) space
class Solution(object):
    def minWindow(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        
        hash_table = collections.Counter(t)
        
        count, left, res = len(t), 0, ''
        for idx, char in enumerate(s):
            if char in hash_table:
                hash_table[char] -= 1
                if hash_table[char] >= 0:
                    count -= 1

                    if count == 0:              
                        while count == 0:
                            if s[left] in hash_table:
                                hash_table[s[left]] += 1
                                if hash_table[s[left]] > 0:
                                    if not res or len(res) > idx-left+1:
                                        res = s[left:idx+1]
                                    count += 1
                            left += 1
        
        return res


别的解法没看过。
