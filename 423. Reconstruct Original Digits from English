class Solution(object):
    def originalDigits(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        if not s: return ""
        hash_table = {}
        
        for char in s:
            if char not in hash_table:
                hash_table[char] = 0
            hash_table[char] += 1
        
        res = [0 for _ in range(10)]
        
        if 'z' in hash_table and hash_table['z'] > 0:
            res[0] += hash_table['z']
            hash_table['e'] -= hash_table['z']
            hash_table['r'] -= hash_table['z']
            hash_table['o'] -= hash_table['z']
            del hash_table['z']
        
        if 'u' in hash_table and hash_table['u'] > 0:
            res[4] += hash_table['u']
            hash_table['f'] -= hash_table['u']
            hash_table['o'] -= hash_table['u']
            hash_table['r'] -= hash_table['u']
            del hash_table['u']
        
        if 'f' in hash_table and hash_table['f'] > 0:
            res[5] += hash_table['f']
            hash_table['i'] -= hash_table['f']
            hash_table['v'] -= hash_table['f']
            hash_table['e'] -= hash_table['f']
            del hash_table['f']

        if 'x' in hash_table and hash_table['x'] > 0:
            res[6] += hash_table['x']
            hash_table['s'] -= hash_table['x']
            hash_table['i'] -= hash_table['x']
            del hash_table['x']
        
        if 's' in hash_table and hash_table['s'] > 0:
            res[7] += hash_table['s']
            hash_table['s'] -= hash_table['s']
            hash_table['e'] -= hash_table['s']
            hash_table['v'] -= hash_table['s']
            hash_table['n'] -= hash_table['s']
            del hash_table['s']
        
        if 'g' in hash_table and hash_table['g'] > 0:
            res[8] += hash_table['g']
            hash_table['e'] -= hash_table['g']
            hash_table['i'] -= hash_table['g']
            hash_table['h'] -= hash_table['g']
            hash_table['t'] -= hash_table['g']
            del hash_table['g']
        
        if 'i' in hash_table and hash_table['i'] > 0:
            res[9] += hash_table['i']
            hash_table['n'] -= hash_table['i']
            hash_table['e'] -= hash_table['i']
            del hash_table['i']
        
        if 'h' in hash_table and hash_table['h'] > 0:
            res[3] += hash_table['h']
            hash_table['t'] -= hash_table['h']
            hash_table['r'] -= hash_table['h']
            hash_table['e'] -= hash_table['h']
            del hash_table['h']
        
        if 'w' in hash_table and hash_table['w'] > 0:
            res[2] += hash_table['w']
            hash_table['t'] -= hash_table['w']
            hash_table['o'] -= hash_table['w']
            del hash_table['w']
        
        if 'o' in hash_table and hash_table['o'] > 0:
            res[1] += hash_table['o']
            hash_table['n'] -= hash_table['o']
            hash_table['e'] -= hash_table['o']
            del hash_table['o']
        
        return ''.join([str(i)*res[i] for i in range(10)])


class Solution(object):
    def originalDigits(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        if not s: return ""
        char_counter = {}
        
        for char in s:
            if char not in char_counter:
                char_counter[char] = 0
            char_counter[char] += 1
        
        res = [0 for _ in range(10)]
        
        if 'z' in char_counter and char_counter['z'] > 0:
            res[0] += char_counter['z']
            char_counter['e'] -= char_counter['z']
            char_counter['r'] -= char_counter['z']
            char_counter['o'] -= char_counter['z']
            del char_counter['z']
        
        if 'u' in char_counter and char_counter['u'] > 0:
            res[4] += char_counter['u']
            char_counter['f'] -= char_counter['u']
            char_counter['o'] -= char_counter['u']
            char_counter['r'] -= char_counter['u']
            del char_counter['u']
        
        if 'f' in char_counter and char_counter['f'] > 0:
            res[5] += char_counter['f']
            char_counter['i'] -= char_counter['f']
            char_counter['v'] -= char_counter['f']
            char_counter['e'] -= char_counter['f']
            del char_counter['f']

        if 'x' in char_counter and char_counter['x'] > 0:
            res[6] += char_counter['x']
            char_counter['s'] -= char_counter['x']
            char_counter['i'] -= char_counter['x']
            del char_counter['x']

        if 's' in char_counter and char_counter['s'] > 0:
            res[7] += char_counter['s']
            char_counter['s'] -= char_counter['s']
            char_counter['e'] -= char_counter['s']
            char_counter['v'] -= char_counter['s']
            char_counter['n'] -= char_counter['s']
            del char_counter['s']
        
        if 'g' in char_counter and char_counter['g'] > 0:
            res[8] += char_counter['g']
            char_counter['e'] -= char_counter['g']
            char_counter['i'] -= char_counter['g']
            char_counter['h'] -= char_counter['g']
            char_counter['t'] -= char_counter['g']
            del char_counter['g']
        
        if 'i' in char_counter and char_counter['i'] > 0:
            res[9] += char_counter['i']
            char_counter['n'] -= char_counter['i']
            char_counter['e'] -= char_counter['i']
            del char_counter['i']
        
        if 'h' in char_counter and char_counter['h'] > 0:
            res[3] += char_counter['h']
            char_counter['t'] -= char_counter['h']
            char_counter['r'] -= char_counter['h']
            char_counter['e'] -= char_counter['h']
            del char_counter['h']
        
        if 'w' in char_counter and char_counter['w'] > 0:
            res[2] += char_counter['w']
            char_counter['t'] -= char_counter['w']
            char_counter['o'] -= char_counter['w']
            del char_counter['w']
        
        if 'o' in char_counter and char_counter['o'] > 0:
            res[1] += char_counter['o']
            char_counter['n'] -= char_counter['o']
            char_counter['e'] -= char_counter['o']
            del char_counter['o']
        
        return ''.join([str(i)*res[i] for i in range(10)])


class Solution(object):
    def originalDigits(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        if not s: return ""
        all_nums = "zeroonetwothreefourfivesixseveneightnine"
        char_counter = {}
        for char in all_nums:
            char_counter[char] = 0
        
        for char in s:
            char_counter[char] += 1
        
        res = [0 for _ in range(10)]
        
        res[0] = char_counter['z']
        res[2] = char_counter['w']
        res[4] = char_counter['u']
        res[6] = char_counter['x']
        res[8] = char_counter['g']
        res[1] = char_counter['o']-res[0]-res[2]-res[4]
        res[3] = char_counter['h']-res[8]
        res[5] = char_counter['f']-res[4]
        res[7] = char_counter['s']-res[6]
        res[9] = char_counter['i']-res[5]-res[6]-res[8]
        
        return ''.join([str(i)*res[i] for i in range(10)])
