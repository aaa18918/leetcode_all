O(n) time, O(1) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        if not head or not head.next:
            return head
        
        p, q = head, head.next
        while q:
            temp = q.next
            q.next = p
            p, q = q, temp
        
        head.next = None
        
        return p


Recursive, O(n) time, O(1) space
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def reverseList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        
        if not head or not head.next:
            return head
        
        p = head.next
        new_head = self.reverseList(p)
        p.next = head
        head.next = None
        
        return new_head
