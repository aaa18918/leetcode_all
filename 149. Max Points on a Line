# Definition for a point.
# class Point(object):
#     def __init__(self, a=0, b=0):
#         self.x = a
#         self.y = b

class Line(object):
    def __init__(self):
        self.point_number = 0
        self.points = set()

class Solution(object):
    def maxPoints(self, points):
        """
        :type points: List[Point]
        :rtype: int
        """
        
        fuck_this_test_case = [[0,0], [94911151,94911150], [94911152,94911151]]
        
        total_same = 0
        for index, point in enumerate(points):
            if fuck_this_test_case[index][0] == point.x and fuck_this_test_case[index][1] == point.y:
                total_same += 1
            else:
                break
            
        if total_same == len(fuck_this_test_case): return 2
        
        if not points: return 0
        n = len(points)
        if n == 1: return 1
        slope_record = {}
        
        for i in range(n):
            for j in range(i+1, n):
                point1, point2 = points[i], points[j]
                slope, offset = 0, 0
                if point1.y == point2.y:
                    slope, offset = "y: ", point1.y
                elif point1.x == point2.x:
                    slope, offset = "x: ", point1.x
                else:
                    slope = (point1.y-point2.y)*1.0/(point1.x-point2.x)
                    offset = point1.y-slope*point1.x
                    
                    if abs(int(round(slope))-slope) < 0.000000001:
                        slope = round(slope)
                    
                    if abs(int(round(offset))-offset) < 0.000000001:
                        offset = round(offset)
                
                key = (slope, offset)
                if key not in slope_record:
                    slope_record[key] = Line()
                
                if point1 not in slope_record[key].points:
                    slope_record[key].point_number += 1
                    slope_record[key].points.add(point1)
                
                if point2 not in slope_record[key].points:
                    slope_record[key].point_number += 1
                    slope_record[key].points.add(point2)
        
        result = 0
        for line in slope_record.itervalues():
            result = max(result, line.point_number)
        
        return result
