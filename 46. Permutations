class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        res = [[]]
        for num in nums:
            temp = []
            for cur_list in res:
                for index in range(len(cur_list)):
                    temp.append(cur_list[:index]+[num]+cur_list[index:])
                temp.append(cur_list+[num])
            res = temp
        
        return res

class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        return [[num]+rest_permutation for index, num in enumerate(nums) for rest_permutation in self.permute(nums[:index]+nums[index+1:])] if nums else [[]]

https://leetcode.com/problems/permutations/

class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        return [[num]+resist_permutation  for index, num in enumerate(nums) for resist_permutation in self.permute(nums[:index]+nums[index+1:])] or [[]]

https://leetcode.com/problems/permutations/

Insert: O(n!) time complexity, O(n*n!) space complexity, 81%
class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        result = [[]]
        for num in nums:
            temp = []
            for cur_list in result:
                for index in xrange(0, len(cur_list)):
                    temp.append(cur_list[:index]+[num]+cur_list[index:])
                temp.append(cur_list+[num])
            result = temp
        return result

One-line Python code(My first One-line Python code!): similar idea as before, 98%
class Solution(object):
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        
        return [ pre[:index]+[nums[-1]]+pre[index:] for pre in self.permute(nums[:-1]) for index in xrange(0, len(pre)+1)] if nums != [] else [[]]
