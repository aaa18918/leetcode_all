class Solution(object):
    def sortColors(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        left, right = 0, len(nums)-1
        index = 0
        
        while index <= right:
            if nums[index] == 0:
                nums[left], nums[index] = nums[index], nums[left]
                left += 1
                index += 1
            elif nums[index] == 2:
                nums[right], nums[index] = nums[index], nums[right]
                right -= 1
            else:
                index += 1

https://leetcode.com/problems/sort-colors/
Go through the list twice: O(n), 48%
class Solution(object):
    def sortColors(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        num_red, num_white = 0, 0
        for color in nums:
            if color == 0:
                num_red += 1
            elif color == 1:
                num_white += 1
        
        for i in xrange(0, num_red):
            nums[i] = 0
        for i in xrange(num_red, num_red+num_white):
            nums[i] = 1
        for i in xrange(num_red+num_white, len(nums)):
            nums[i] = 2

One pass: O(n), 93%
class Solution(object):
    def sortColors(self, nums):
        """
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        
        index, left, right = 0, 0, len(nums)-1
        
        while index <= right:
            if nums[index] == 0 and index != left:
                nums[left], nums[index] = nums[index], nums[left]
                left += 1
            elif nums[index] == 2 and index != right:
                nums[right], nums[index] = nums[index], nums[right]
                right -= 1
            else:
                index += 1

def sortColors(self, nums):
    i = j = 0
    for k in xrange(len(nums)):
        v = nums[k]
        nums[k] = 2
        if v < 2:
            nums[j] = 1
            j += 1
        if v == 0:
            nums[i] = 0
            i += 1

# 86 / 86 test cases passed.
# Status: Accepted
# Runtime: 44 ms
# 84.03%
