O(3^n) time, O(???) space
class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        
        maps = {'2':'abc', '3':'def', '4':'ghi', '5':'jkl',
                '6':'mno', '7':'pqrs', '8':'tuv', '9':'wxyz',
               }
        
        def myDFS(idx):
            return [char+p for char in maps[digits[idx]] for p in myDFS(idx+1)] if idx < len(digits) else ['']
        
        return myDFS(0) if digits else []
